I"¬<p>During A/B testing in our application rewrite project, we discovered default <a href="http://www.dropwizard.io">Dropwizard</a> metrics didnâ€™t provide actual application uptime. This becomes important when youâ€™ve got an automated build/deploy environment that includes periodic health checks and the ability to restart only the application instance, rather than the entire application server. System uptime is not necessarily representative of application instance runtime.</p>

<p>Dropwizard includes <a href="https://github.com/dropwizard/metrics">Coda Hale Metrics</a> in its default collection of Java tools. This allows easy collection of application metrics, both from a set of default included metrics sources and custom metrics. The default set of metrics includes many useful things youâ€™d want to know about a Java application: memory usage, thread statistics, and garbage collector stats, for example.</p>

<p>While uptime isnâ€™t included in the default set of provided metrics, an uptime metric <a href="https://github.com/dropwizard/metrics/blob/master/metrics-core/src/main/java/com/codahale/metrics/JvmAttributeGaugeSet.java">seemed to be available</a> as part of the metrics package. I couldnâ€™t find any documentation on using or registering these metrics, which turns out to be very simple. Add the following to your Dropwizard application class:</p>

<figure class="highlight"><pre><code class="language-groovy" data-lang="groovy"><span class="kn">import</span> <span class="nn">com.codahale.metrics.JvmAttributeGaugeSet</span>

<span class="kd">class</span> <span class="nc">YourApplication</span> <span class="kd">extends</span> <span class="n">Application</span><span class="o">&lt;</span><span class="n">YourApplicationConfiguration</span><span class="o">&gt;</span> <span class="o">{</span>

    <span class="nd">@Override</span>
    <span class="kt">void</span> <span class="nf">run</span> <span class="o">(</span><span class="n">YourApplicationConfiguration</span> <span class="n">configuration</span><span class="o">,</span> <span class="n">Environment</span> <span class="n">environment</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
        <span class="cm">/* Other application initialization */</span>
        <span class="n">environment</span><span class="o">.</span><span class="na">metrics</span><span class="o">().</span><span class="na">registerAll</span><span class="o">(</span><span class="k">new</span> <span class="n">JvmAttributeGaugeSet</span><span class="o">())</span>   
    <span class="o">}</span>
<span class="o">}</span></code></pre></figure>

<p>Dropwizard Metrics will now report uptime, in milliseconds, in the gauges section of the metrics report. The gauge is registered with the key <code>uptime</code>. Since this method brings in the entire <code>JvmAttributeGaugeSet</code>, youâ€™ll also get metrics for the name (pid@hostname) and JVM vendor.</p>
:ET